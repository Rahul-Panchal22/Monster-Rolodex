{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","detail","id","name","email","CardList","ataksukis","map","ataksuki","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","user","this","filterMonsters","filter","monster","toLowerCase","includes","console","log","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAIaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBACIC,IAAM,WACNC,IAAG,+BAA4BH,EAAMI,OAAOC,GAAzC,6BAEP,6BACKL,EAAMI,OAAOE,OAElB,4BACKN,EAAMI,OAAOG,YCTjBC,G,MAAW,SAACR,GACrB,OACC,qBAAKC,UAAU,YAAf,SACID,EAAMS,UAAUC,KAAI,SAAAC,GAAQ,OACrB,cAAC,EAAD,CAAyBP,OAAUO,GAAvBA,EAASN,WCNxBO,G,MAAY,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,aACrC,OACI,qBAAKb,UAAU,SAAf,SACI,uBACAc,KAAO,SACPF,YAAeA,EACfG,SAAYF,QC2BTG,E,kDA/Bb,aAAc,IAAD,8BACX,gBAYFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAcF,EAAEG,OAAOC,SAZvC,EAAKC,MAAQ,CACXZ,SAAW,GACXS,YAAc,IAJL,E,qDAQb,WAAoB,IAAD,OACjBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKT,SAAS,CAAER,SAAWiB,S,oBAM7C,WACE,MAAkCC,KAAKN,MAA/BZ,EAAR,EAAQA,SAAUS,EAAlB,EAAkBA,YACZU,EAAiBnB,EAASoB,QAAO,SAAAC,GAAO,OAAIA,EAAQ1B,KAAK2B,cAAcC,SAASd,EAAYa,kBAElG,OADAE,QAAQC,IAAIN,GAEV,sBAAK7B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWY,YAAc,iBAAiBC,aAAgBe,KAAKf,eAC/D,cAAC,EAAD,CAAUL,UAAaqB,W,GA1BbO,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c71f5e9f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.style.css'\r\n\r\nexport const Card = (props)=>{\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img \r\n                alt = \"monsters\" \r\n                src = {`https://robohash.org/${props.detail.id}.?set=set2&size=180x180`}\r\n            />\r\n            <h2>\r\n                {props.detail.name}\r\n            </h2>\r\n            <p>\r\n                {props.detail.email}\r\n            </p>     \r\n        </div>\r\n    )\r\n    \r\n}","import React from 'react'\r\n\r\nimport {Card} from '../card/card.component'\r\n\r\nimport './card-list.styles.css'\r\n\r\nexport const CardList = (props) => {\r\n    return (\r\n     <div className=\"card-list\">\r\n        {props.ataksukis.map(ataksuki => \r\n                <Card key= {ataksuki.id} detail = {ataksuki}/>\r\n            )\r\n        }\r\n     </div>\r\n    )\r\n};","import React from 'react';\r\n\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({ placeholder, handleChange })=>{\r\n    return (\r\n        <div className=\"search\">\r\n            <input \r\n            type = \"search\" \r\n            placeholder = {placeholder}\r\n            onChange = {handleChange}\r\n            // {e => {this.setState({searchField : e.target.value},() => console.log(this.state))   \r\n            />\r\n        </div>\r\n    )\r\n}","import React from \"react\"\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component'\nimport { SearchBox } from './components/search-box/search-box.component'\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      ataksuki : [],\n      searchField : ''\n    }\n  }\n\n  componentDidMount(){\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => response.json())\n      .then(user => this.setState({ ataksuki : user }))\n  }\n  handleChange = (e)=>{\n    this.setState({ searchField : e.target.value })\n  }\n\n  render() {\n    const { ataksuki, searchField } = this.state\n    const filterMonsters = ataksuki.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    console.log(filterMonsters);\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder = \"Search Monster\" handleChange = {this.handleChange}/>        \n        <CardList ataksukis = {filterMonsters}/> \n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}